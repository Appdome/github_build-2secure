name: Appdome build-2secure
description: Appdome Build-2secure in GitHub
branding:
  icon: 'bluetooth'
  color: 'blue'

inputs:
  APPDOME_API_TOKEN:
    description: 'Appdome API key'
    default: 'None'
    required: true
  APP_FILE:
    description: 'APK file'
    default: 'None'
    required: true
  FUSION_SET_ID:
    description: "Appdome FusionSetId iOS/Android"
    default: 'None'
    required: true
  SIGN_OPTIONS:
    type: choice
    description: "iOS/Android Signin option"
    options: 
    - SIGN_ON_APPDOME
    - PRIVATE_SIGNING
    - AUTO_DEV_SIGNING
    required: true
  KEYSTORE_FILE:
    description: 'Keystore sign file'
    default: 'None'
    required: false
  MOBILE_PROVISION_PROFILE_FILE:
    description: 'iOS sign file'
    default: 'None'
    required: false
  ENTITLEMENTS_FILE:
    description: 'iOS sign file'
    default: 'None'
    required: false
  KEYSTORE_PASSWORD:
    description: 'Keystore password sign file'
    default: 'None'
    required: false
  KEYSTORE_ALIAS:
    description: 'keystore alias'
    default: 'None'
    required: false
  KEYSTORE_KEY_PASSWORD:
    description: 'keystore key password'
    default: 'None'
    required: false
  SIGN_FINGERPRINT:
    description: 'signing sha1 fingerprint'
    default: 'None'
    required: false
  GOOGLE-PLAY-SIGNING:
    description: 'Google Play App Signing program'
    type: boolean
    default: "false"
    required: false
  CERTIFICATE_FILE:
    description: 'Certificate sign file'
    default: 'None'
    required: false
  CERTIFICATE_PASSWORD:
    description: 'Certificate password sign file'
    default: 'None'
    required: false
  TEAM-ID:
    description: 'your team-id'
    default: 'None'
    required: false
  BUILD_WITH_LOGS:
    description: 'whether build with logs or not'
    default: false
    type: boolean
    required: false
  SECOND_OUTPUT:
    description: 'Should there be a second universal apk output (for aab apps)?'
    default: false
    type: boolean
    required: false
  OUTPUT_APP_NAME:
    description: 'Specify a name for the output app (without the extension)'
    default: "None"
    required: false
  BUILD_TO_TEST:
    type: choice
    description: "Build to test option"
    options:
      - bitbar
      - browserstack
      - lambdatest
      - saucelabs
    required: false
    default: "None"
runs:
  using: "composite"
  steps:
    - name: Cloning appdome-api-python github repository
      uses: actions/checkout@master
      with:
        repository: Appdome/appdome-api-python
        ref: refs/heads/main
        path: appdome
    - name: Install requirements
      run: sudo pip3 install -r appdome/requirements.txt
      shell: bash
    - name: Run download action files
      run: python3 ./actions/files_manager.py -a "${{ inputs.APP_FILE }}" -k "${{ inputs.KEYSTORE_FILE }}" -c "${{ inputs.CERTIFICATE_FILE }}" -pp "${{ inputs.MOBILE_PROVISION_PROFILE_FILE }}" -e "${{ inputs.ENTITLEMENTS_FILE }}"
      shell: bash
    - name: Run appdome bash action files
      run: python3 ./actions/appdome_build_sign.py -sign ${{ inputs.SIGN_OPTIONS }} -api_key ${{ inputs.APPDOME_API_TOKEN }} -fs ${{ inputs.FUSION_SET_ID }} -cp ${{ inputs.CERTIFICATE_PASSWORD }} -kp ${{ inputs.KEYSTORE_PASSWORD }} -ka ${{ inputs.KEYSTORE_ALIAS }} -kkp ${{ inputs.KEYSTORE_KEY_PASSWORD }} -team_id ${{ inputs.TEAM-ID }} -google-play-signing ${{ inputs.GOOGLE-PLAY-SIGNING }} -signing_fingerprint ${{ inputs.SIGN_FINGERPRINT }} -bl ${{ inputs.BUILD_WITH_LOGS }} --sign_second_output ${{inputs.SECOND_OUTPUT}} -bt ${{inputs.BUILD_TO_TEST}} -o ${{inputs.OUTPUT_APP_NAME}}
      shell: bash
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: workflow-artifacts
        path: ./output/
    - name: List files in output directory
      run: ls -al ./output/
      shell: bash
    - name: Find secure app file
      id: secure_app_file
      run: |
         FILE=$(find ./output/ -type f -name "${{ inputs.OUTPUT_APP_NAME }}.*" )
         echo "APPDOME_SECURED_APP=$FILE" >> $GITHUB_ENV
         FILE_SECOND_OUTPUT=$(find ./output/ -type f -name "${{ inputs.OUTPUT_APP_NAME }}_second_output.apk" )
         if [ -e "$FILE_SECOND_OUTPUT" ]; then
            echo "APPDOME_SECURED_APP_SECOND_OUTPUT=$FILE_SECOND_OUTPUT" >> $GITHUB_ENV
         fi
      shell: bash
